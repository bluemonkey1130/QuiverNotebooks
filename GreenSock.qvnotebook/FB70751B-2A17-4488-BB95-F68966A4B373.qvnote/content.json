{
  "title": "1. Tweening",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "// SYNTAX\ngsap.method(element,duration,vars)\n\nmethod() // GSAP method it tween\nelement // animation target\nduration // duration of tween [in seconds]\nvars // object if the properties to tween"
    },
    {
      "type": "text",
      "data": "<h2>Methods for creating tweens</h2>"
    },
    {
      "type": "text",
      "data": "<b>Example</b>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "gsap.to(\".rect\", 3, {\n    delay: 1,\n    rotate: 2880,\n    skewX: 45,\n    fill: \"yellow\",\n    ease: 'power1.in'\n  })"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<svg width=\"900\" height=\"650\">\n  <rect class=\"rect\" x=\"400\" y=\"300\" width=\"100\" height=\"100\" fill=\"indigo\" stroke=\"black\"/>\n  <rect class=\"rect\" x=\"200\" y=\"300\" width=\"100\" height=\"100\" fill=\"indigo\" stroke=\"black\"/>\n</svg>"
    },
    {
      "type": "text",
      "data": "<h3>Three methods:</h3><div><ul><li>gsap.to() &nbsp;- you define the end values, GSAP uses the current values as the start values</li><li>gsap.from() - you define where the values should start, and the is animates to the current state</li><li>gsap.fromTwo() - you define the starting and ending values</li></ul></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "gsap.to(\"#b\", 3, {delay: 2, x: 700, repeat: -1});\ngsap.from(\"#g\", 3, {delay: 2, x: 700, repeat: -1});\ngsap.fromTo(\"#r\", 3, {x: 200}, {delay: 2, x:700, repeat:-1});"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<svg width=\"900\" height=\"650\">\n  <div id=\"b\" class=\"circle\"><p>gsap.to()</p></div>\n  <div id=\"g\" class=\"circle\"><p>gsap.from()</p></div>\n  <div id=\"r\" class=\"circle\"><p>gsap.fromTo()</p></div>\n</svg>"
    }
  ]
}