{
  "title": "Rendering to the DOM",
  "cells": [
    {
      "type": "text",
      "data": "<div>Let’s say there is a &lt;div&gt; somewhere in your HTML file:</div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "<div id=\"root\"></div>"
    },
    {
      "type": "text",
      "data": "Applications built with just React usually have a single root DOM node. If you are integrating React into an existing app, you may have as many isolated root DOM nodes as you like."
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "const element = <h1>Hello, world</h1>;\nReactDOM.render(element, document.getElementById('root'));"
    },
    {
      "type": "text",
      "data": "<h3>Updating the Rendered Element</h3><div>React elements are immutable. Once you create an element, you can’t change its children or attributes. An element is like a single frame in a movie: it represents the UI at a certain point in time.</div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "function tick() {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  );\n  ReactDOM.render(element, document.getElementById('root'));\n}\n\nsetInterval(tick, 1000);\n//Even though we create an element describing the whole UI tree on every tick, only the text node whose contents  have changed gets updated by React DOM."
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}