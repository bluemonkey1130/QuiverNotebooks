{
  "title": "Styled Components",
  "cells": [
    {
      "type": "code",
      "language": "jsx",
      "data": "import styled from 'styled-components'\n\nconst handleRowWidth = (width) => {\n    switch (width) {\n        case \"narrow\":\n            return 'grid-column-start: 4;' +\n                'grid-column-end: 12;'\n        case \"standard\":\n            return 'grid-column-start: 3;' +\n                'grid-column-end: 13;'\n        case \"align-wide\":\n            return 'grid-column-start: 2;' +\n                'grid-column-end: 14;'\n        case \"align-full\":\n            return 'grid-column-start: 1;' +\n                'grid-column-end: 15;'\n        default:\n            return 'grid-column-start: 3;' +\n                'grid-column-end: 13;'\n    }\n}\nconst handleColumnStart = (colStart) => {\n    switch (colStart) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n            return colStart\n        default:\n            return 'auto'\n    }\n}\nconst handleRowStart = (rowStart) => {\n    switch (rowStart) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n            return rowStart\n        default:\n            return 'auto'\n    }\n}\nconst handleRowSpan = (rowSpan) => {\n    switch (rowSpan) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n            return 'span ' + rowSpan\n        default:\n            return 'auto'\n    }\n}\nconst handleColumnSpan = (colSpan) => {\n    switch (colSpan) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n            return 'span ' + colSpan\n        default:\n            return 'span ' + 12\n    }\n}\n\nexport const Grid = styled.section`\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n    grid-auto-rows: minmax(min-content, max-content);\n    grid-template-columns: [full-start] minmax(calc(calc(100% - 1500px) / 2), 1fr) [main-start] repeat(12, [col-start] 1fr) [main-end] minmax(calc(calc(100% - 1500px) / 2), 1fr) [full-end];\n    grid-template-rows: auto;\n    // grid-row-gap:2rem;\n    margin: 0 auto;\n`\n\nexport const Row = styled.div`\n    ${({width}) => handleRowWidth(width)};\n    align-content: ${(props) => props.align ? props.align : 'unset'};\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n    grid-auto-rows: minmax(min-content, max-content);\n    grid-gap: ${(props) => props.gridGap ? props.gridGap : '2'}rem;\n    grid-row: auto;\n    grid-template-columns: repeat(12, 1fr);\n`\n\nexport const Block = styled.div`\n    align-items: stretch;\n    display: inherit;\n    grid-auto-flow: dense;\n    grid-column: ${({colStart}) => handleColumnStart(colStart)} /  ${({colSpan}) => handleColumnSpan(colSpan)};\n    grid-row: ${({rowStart}) => handleRowStart(rowStart)} /  ${({rowSpan}) => handleRowSpan(rowSpan)};\n`"
    }
  ]
}