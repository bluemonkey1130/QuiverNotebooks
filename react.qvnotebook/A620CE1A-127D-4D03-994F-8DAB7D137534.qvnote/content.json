{
  "title": "React Snippets",
  "cells": [
    {
      "type": "markdown",
      "data": "# ReactSnippets\nLive Templates for React in IntelliJ products webstorm and idea.\n\n| Trigger | Content |\n| --- | --- |\n| `rcc` | class component skeleton |\n| `rrc` | class component skeleton with react-redux connect |\n| `rccp` | class component skeleton with prop types after the class |\n| `rcfc` | class component skeleton that contains all the lifecycle methods |\n| `rsc` | stateless component skeleton |\n| `rscp` | stateless component with prop types skeleton |\n| `pt` | empty propTypes declaration |\n| `con` | class default constructor with props |\n| `conc` | class default constructor with props and context |\n| `cwm` | `componentWillMount` method |\n| `cdm` | `componentDidMount` method |\n| `cwr` | `componentWillReceiveProps` method |\n| `scu` | `shouldComponentUpdate` method |\n| `cwup` | `componentWillUpdate` method |\n| `cdup` | `componentDidUpdate` method |\n| `cwun` | `componentWillUnmount` method |\n| `ren` | `render` method |\n| `bind` | binds the `this` of method inside the constructor |\n| `hoc` | higher-order component |\n| `cref` | creates a ref. |\n| `cctx` | creates a context |\n\nAdd all the snippets that can be used for prop types.\n\n| Trigger | Content |\n| --- | --- |\n| `pta` | `PropTypes.array,` |\n| `ptar` | `PropTypes.array.isRequired,` |\n| `ptb` | `PropTypes.bool,` |\n| `ptbr` | `PropTypes.bool.isRequired,` |\n| `ptf` | `PropTypes.func,` |\n| `ptfr` | `PropTypes.func.isRequired,` |\n| `ptn` | `PropTypes.number,` |\n| `ptnr` | `PropTypes.number.isRequired,` |\n| `pto` | `PropTypes.object,` |\n| `ptor` | `PropTypes.object.isRequired,` |\n| `pts` | `PropTypes.string,` |\n| `ptsr` | `PropTypes.string.isRequired,` |\n| `ptnd` | `PropTypes.node,` |\n| `ptndr` | `PropTypes.node.isRequired,` |\n| `ptel` | `PropTypes.element,` |\n| `ptelr` | `PropTypes.element.isRequired,` |\n| `pti` | `PropTypes.instanceOf(ClassName),` |\n| `ptir` | `PropTypes.instanceOf(ClassName).isRequired,` |\n| `pte` | `PropTypes.oneOf(['News', 'Photos']),` |\n| `pter` | `PropTypes.oneOf(['News', 'Photos']).isRequired,` |\n| `ptet` | `PropTypes.oneOfType([PropTypes.string, PropTypes.number]),` |\n| `ptetr` | `PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,` |\n| `ptao` | `PropTypes.arrayOf(PropTypes.number),` |\n| `ptaor` | `PropTypes.arrayOf(PropTypes.number).isRequired,` |\n| `ptoo` | `PropTypes.objectOf(PropTypes.number),` |\n| `ptoor` | `PropTypes.objectOf(PropTypes.number).isRequired,` |\n| `ptsh` | `PropTypes.shape({color: PropTypes.string, fontSize: PropTypes.number}),` |\n| `ptshr` | `PropTypes.shape({color: PropTypes.string, fontSize: PropTypes.number}).isRequired,` |\n\nHooks\n\nAll hooks from [official docs](https://reactjs.org/docs/hooks-reference.html) are supported with hook name prefix.\n\n"
    }
  ]
}