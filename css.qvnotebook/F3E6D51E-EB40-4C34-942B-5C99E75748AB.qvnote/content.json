{
  "title": "Build Style",
  "cells": [
    {
      "type": "markdown",
      "data": "## Structure & Styling\nI've leveraged some layouts from [**every layout**](https://every-layout.dev/) & combined with my own grid based styling. The idea is to create powerful CSS that is scalable and fast to write.\n\n**Pages are built upon the idea of grid rows, with the structure shown below.** The styling is based on a 14 column grid, row can be placed anywhere on the grid, the 12 inner columns have a fixed width, the two gutter columns on the edges of the page spread as far as needed."
    },
    {
      "type": "code",
      "language": "text",
      "data": "<article class=\"grid-row\"> \n    <section class=\"grid\"><!-- automatic column number -->\n        <div><!-- --></div> \n        <div><!-- --></div>  \n        <div><!-- --></div>  \n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "Any HTML elements can be used with the same class set up"
    },
    {
      "type": "code",
      "language": "text",
      "data": "<header class=\"grid-row\"> \n    <nav class=\"grid\">\n        <address><!-- --></address> \n        <video><!-- --></video>  \n        <div><!-- --></div>  \n    </nav>\n</header>"
    },
    {
      "type": "markdown",
      "data": "Successive rows can be used to create whole pages"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section id=\"title\" class=\"grid\"> <!-- One Column -->\n        <div><!-- --></div> \n    </section>\n    <section id=\"text\" class=\"grid\"> <!-- Two Columns -->\n        <figure><!-- --></figure> \n        <div><!-- --></div>  \n    </section>\n    <section id=\"gallery\" class=\"grid\"> <!-- Four Columns -->\n        <figure><!-- --></figure> \n        <figure><!-- --></figure> \n        <figure><!-- --></figure> \n        <figure><!-- --></figure> \n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "`.grid-row` is a wrapper for as many `.grid` elements as you want. Each `.grid` element can be set to a different widths: `standard`, `alignwide`, `alignfull` & `narrow`.\n\nIn this image you can see the different widths: the top row is `.align-full`, the second row is `.align-wide` and the bottom row is aligned to the `.standard` width\n\n![twelve-column.png](quiver-image-url/98F6BB0F1F0E68C9D338C2DB1158E75D.png =1856x1067)\n\nThis approach allows flexibility when building up pages with combinations of coloured backgrounds and different margins."
    },
    {
      "type": "code",
      "language": "scss",
      "data": "  .grid-row {\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n    grid-auto-rows: minmax(min-content, max-content);\n    grid-template-columns: [full-start] minmax(calc(calc(100% - 1500px) / 2), 1fr) [main-start] repeat(12, [col-start] 1fr) [main-end] minmax(calc(calc(100% - 1500px) / 2), 1fr) [full-end];\n    grid-template-rows: auto;\n    margin: 0 auto var(--gridsize) auto;\n    max-width: calc(var(--measure) * 5);\n    position: relative;\n  }"
    },
    {
      "type": "markdown",
      "data": "This CSS grid applied to `.grid-row` is a 14 column grid, 12 have a fixed width, and the two outermost spread to as large a possible. This is used control the `.grid` width options:"
    },
    {
      "type": "code",
      "language": "scss",
      "data": ".narrow { \n  grid-column-start: 4;\n  grid-column-end: 12;\n}\n.standard { // Declared as the default, no need to declare the class\n  grid-column-start: 3;\n  grid-column-end: 13;\n}\n.align-wide {\n  grid-column-start: 2;\n  grid-column-end: 14;\n}\n.align-full {\n  grid-column-start: 1;\n  grid-column-end: 15;\n}"
    },
    {
      "type": "markdown",
      "data": "By default, they are set to the `standard` width, which doesn't need to be declared"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section class=\"grid\">\n        <div><!-- --></div> \n        <div><!-- --></div>  \n        <div><!-- --></div>\n    </section>\n    <section class=\"grid align-wide\">\n        <div><!-- --></div> \n        <div><!-- --></div>  \n        <div><!-- --></div>\n    </section>\n    <section class=\"grid align-full\">\n        <div><!-- --></div> \n        <div><!-- --></div>  \n        <div><!-- --></div>\n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "`.grid-row`'s can be separated out to allow for further separation when wanting to apply different background colours or images that should span full width"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article>\n    <section class=\"grid-row bg-primary\">\n        <div class=\"grid align-wide\">\n            <div><!-- --></div> \n            <div><!-- --></div>  \n        </div>\n    </section>\n    <section class=\"grid-row\">\n        <div class=\"grid\">\n            <div><!-- --></div> \n            <div><!-- --></div>  \n        </div>\n    </section>\n    <section class=\"grid-row bg-primary\">\n        <div class=\"grid align-wide\">\n            <div><!-- --></div> \n            <div><!-- --></div>  \n        </div>\n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "---\n### ``grid``\nThe `.grid` inside of the `.grid-row` automatically sets the column number to match the number of child elements with a minimum width of 250px"
    },
    {
      "type": "code",
      "language": "text",
      "data": "grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section class=\"grid\"> \n        <div><!-- --></div> \n        <div><!-- --></div> \n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "These classes can be used to alter the minimum block width like below, the default is ``250px``"
    },
    {
      "type": "code",
      "language": "scss",
      "data": ".tiny-blocks / 10px;\n.small-blocks / 200px;\n.default-blocks / 250px; // the default, no need to declare \n.medium-blocks / 350px;\n.large-blocks / 450px;"
    },
    {
      "type": "markdown",
      "data": "### ``grid-layout``\nWhereas the `.grid-layout` class, which can be used in the place of `.grid` will allow you to set fixed column structures, such as:"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section class=\"grid-layout\"> <!-- By default it will set up one column -->\n        <div><!-- --></div> \n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "These classes can be used to enforce column structures like below"
    },
    {
      "type": "code",
      "language": "scss",
      "data": ".has-one-column\n.has-two-columns\n.has-three-columns\n.has-four-columns\n.has-five-columns\n.has-six-columns"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section class=\"grid-layout has-two-columns\"> \n        <div><!-- --></div> \n        <div><!-- --></div> \n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "Some of these layouts have modifier classes to adjust the ratios of the column structure"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section class=\"grid-layout has-two-columns\"> \n        <div><!-- --></div> \n        <div><!-- --></div> \n    </section>\n    <section class=\"grid-layout has-two-columns left-wide\"> \n        <div><!-- --></div> \n        <div><!-- --></div> \n    </section>\n    <section class=\"grid-layout has-two-columns right-wide\"> \n        <div><!-- --></div> \n        <div><!-- --></div> \n    </section>\n</article>"
    },
    {
      "type": "markdown",
      "data": "It will enforce the column layout regardless of the number of child elements."
    },
    {
      "type": "code",
      "language": "html",
      "data": "<article class=\"grid-row\">\n    <section class=\"grid-layout has-three-columns\">  <!-- Still three columns -->\n        <div><!-- --></div> \n        <div><!-- --></div> \n        <div><!-- --></div> \n        <div><!-- --></div> \n        <div><!-- --></div> \n        <div><!-- --></div> \n    </section>\n</article>"
    }
  ]
}